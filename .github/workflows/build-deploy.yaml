name: Build-Deploy
on:
  pull_request:
    types: [opened, synchronize, reopened, ready_for_review, closed]
  workflow_dispatch:

jobs:
  ktlint:
    name: Ktlint
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # ratchet:actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: actions/setup-java@c5195efecf7bdfc987ee8bae7a71cb8b11521c00 # ratchet:actions/setup-java@v4.7.1
        with:
          java-version: 21
          distribution: 'temurin'
          cache: 'maven'
      - name: Kj√∏r ktlint
        env:
          GITHUB_USERNAME: x-access-token
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          mvn antrun:run@ktlint
  build-and-deploy-artifact:
    name: Build and deploy to github package
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # ratchet:actions/checkout@v4

      - uses: actions/setup-java@c5195efecf7bdfc987ee8bae7a71cb8b11521c00 # ratchet:actions/setup-java@v4.7.1
        with:
          java-version: 21
          distribution: 'temurin'
          cache: 'maven'

      - name: Resolve/Update Dependencies
        run: mvn package dependency:resolve-plugins dependency:go-offline

      - name: Build (and run tests)
        run: mvn clean install

      - name: Setting version
        if: github.base_ref == 'main' && github.event.pull_request.merged == true
        run: |
          export GIT_COMMIT_HASH=$(git log -n 1 --pretty=format:'%h')
          export GIT_COMMIT_DATE=$(git log -1 --pretty='%ad' --date=format:'%Y%m%d%H%M%S')
          export VERSION=1.0_${GIT_COMMIT_DATE}_${GIT_COMMIT_HASH}
          echo "Setting version $VERSION"
          mvn versions:set -DnewVersion="$VERSION"
          mvn versions:commit

      - name: Deploy to Github Package
        if: github.base_ref == 'main' && github.event.pull_request.merged == true
        env:
          GITHUB_USERNAME: x-access-token
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: mvn --settings .m2/maven-settings.xml source:jar-no-fork deploy -DskipTests=true -Dmaven.wagon.http.pool=false
